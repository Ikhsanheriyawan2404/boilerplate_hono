name: CI/CD

on:
  push:
    branches:
      - main
      - dev
  pull_request:
    branches:
      - main
      - dev

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    # - name: Log in to registry
    #   uses: docker/login-action@v1
    #   with:
    #     registry: ${{ secrets.REGISTRY_HOST }}
    #     username: ${{ secrets.REGISTRY_USERNAME }}
    #     password: ${{ secrets.REGISTRY_PASSWORD }}

    # - name: Build and push Docker image
    #   uses: docker/build-push-action@v2
    #   with:
    #     context: .
    #     push: true
    #     tags: ${{ secrets.REGISTRY_HOST }}/hono:${{ github.ref == 'refs/heads/main' && 'latest' || 'dev' }}

  deploy_main:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Add SSH key
      uses: webfactory/ssh-agent@v0.5.3
      with:
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

    - name: Deploy to Production
      env:
        HOST: ${{ secrets.HOST }}
        USER: ${{ secrets.USER }}
      run: |
        ssh -o StrictHostKeyChecking=no -p 10123 -t $USER@$HOST << 'EOF'
          cd /var/www/html/hono
          docker compose -f compose.yml -f compose.prod.yml --env-file .env.production pull
          docker compose -f compose.yml -f compose.prod.yml --env-file .env.production up -d
        EOF

  deploy_dev:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/dev'

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Add SSH key
      uses: webfactory/ssh-agent@v0.5.3
      with:
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

    - name: Deploy to Development
      env:
        HOST: ${{ secrets.HOST }}
        USER: ${{ secrets.USER }}
      run: |
        ssh -o StrictHostKeyChecking=no -p 10123 -t $USER@$HOST << 'EOF'
          cd /var/www/html/hono
          docker compose -f compose.yml -f compose.dev.yml --env-file .env.development pull
          docker compose -f compose.yml -f compose.dev.yml --env-file .env.development up -d
        EOF
